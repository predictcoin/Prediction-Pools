{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x9aE1f34DB0CeA583D6cAc315BF47c94C595B8c52",
      "txHash": "0x6eadd8ae2a0a381eddbc9d1fed13cfb95fefe9c47735b0a84141476005e7858e",
      "kind": "uups"
    },
    {
      "address": "0xd8b867faf709A365d281D711BfEdcD01bC1D34D7",
      "txHash": "0x36cb48e71d771b86b6357be947f7a45dd559f52d3e617f92418de2c049831565",
      "kind": "uups"
    },
    {
      "address": "0x4b74C42b7aB96fEec003563c355f2fEfD0C80ee7",
      "txHash": "0xfccb9c077626227cdb4dc260b982a553019d20a34a53035da6c661eebb07ecdb",
      "kind": "uups"
    },
    {
      "address": "0x29C06EB1320BBc32A6891889A3dF56d8422f5406",
      "txHash": "0x21d75419bbbc07caa8700b0685a4f0144158843195b75bfc535b4a20b976eccb",
      "kind": "uups"
    },
    {
      "address": "0x0Dbe9A8C195613A28F128046b341F9501Cd004Bc",
      "txHash": "0x5df293ba4d18cc60f2ec6d79f36936dc3b539f0c152f62df316a6dc873b8a6ae",
      "kind": "uups"
    },
    {
      "address": "0x5D83EF52661Baa67c9a7d60BF61b8339622603B6",
      "txHash": "0x2f7023960034bb5cef7906cbd3c0f7c1e1eeebf089910d1ff8aa8f5d3ccc92d3",
      "kind": "uups"
    },
    {
      "address": "0xDe3a1Ab5a741819d672B3b24Ba2F1154179CF0B1",
      "txHash": "0x9069923a4767d2173ac4859ad2e77b3143e52e259b85fd7aec7402a0e9dd3bf2",
      "kind": "uups"
    },
    {
      "address": "0xf7D256f46593c4695D11858d8D4089417652A86f",
      "txHash": "0x6cd170d93abfa15f7feb4b25d85eae9fbc5e07e69898395c82691dd057b25409",
      "kind": "uups"
    }
  ],
  "impls": {
    "82009828adf055a75499ff9c23fa47ccd2d8a7f8c4978bf9bf88aa18ab29a9e4": {
      "address": "0x59cd2E492FF59dE3D99C0E034E85c7E51d420643",
      "txHash": "0xf2ba653abf51f3aa99ec6d753961b73137cf143bd87ad02a243a5dd53e065276",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "MasterPred",
            "label": "pred",
            "type": "t_contract(IBEP20)3872",
            "src": "contracts/Farm.sol:66"
          },
          {
            "contract": "MasterPred",
            "label": "predPerBlock",
            "type": "t_uint256",
            "src": "contracts/Farm.sol:68"
          },
          {
            "contract": "MasterPred",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/Farm.sol:70"
          },
          {
            "contract": "MasterPred",
            "label": "migrator",
            "type": "t_contract(IMigratorChef)2520",
            "src": "contracts/Farm.sol:72"
          },
          {
            "contract": "MasterPred",
            "label": "wallet",
            "type": "t_contract(MasterPredWallet)3794",
            "src": "contracts/Farm.sol:74"
          },
          {
            "contract": "MasterPred",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)2550_storage)dyn_storage",
            "src": "contracts/Farm.sol:77"
          },
          {
            "contract": "MasterPred",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)2540_storage))",
            "src": "contracts/Farm.sol:79"
          },
          {
            "contract": "MasterPred",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/Farm.sol:81"
          },
          {
            "contract": "MasterPred",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/Farm.sol:83"
          },
          {
            "contract": "MasterPred",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/Farm.sol:85"
          }
        ],
        "types": {
          "t_contract(IBEP20)3872": {
            "label": "contract IBEP20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IMigratorChef)2520": {
            "label": "contract IMigratorChef"
          },
          "t_contract(MasterPredWallet)3794": {
            "label": "contract MasterPredWallet"
          },
          "t_array(t_struct(PoolInfo)2550_storage)dyn_storage": {
            "label": "struct MasterPred.PoolInfo[]"
          },
          "t_struct(PoolInfo)2550_storage": {
            "label": "struct MasterPred.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)3872"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accPredPerShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)2540_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MasterPred.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)2540_storage)": {
            "label": "mapping(address => struct MasterPred.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)2540_storage": {
            "label": "struct MasterPred.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "12d167c5ac82dcd8cb804266bb755d57386497115e2b948646229c489f78904f": {
      "address": "0x2B4A2258B5e330cb72FA85e1E129bB112152BDDd",
      "txHash": "0x4ff65d09f96395ecd97db4d8c20f5cf2f4a19895191710bdac984cc189c13398",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)8342",
            "src": "contracts/LoserPredictionPool.sol:50"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "prediction",
            "type": "t_contract(IPrediction)8587",
            "src": "contracts/LoserPredictionPool.sol:52"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "bnbPerBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:54"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:56"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)7146",
            "src": "contracts/LoserPredictionPool.sol:58"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:59"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)3490_storage)dyn_storage",
            "src": "contracts/LoserPredictionPool.sol:62"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3479_storage))",
            "src": "contracts/LoserPredictionPool.sol:64"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:66"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:68"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:70"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "operatorAddress",
            "type": "t_address",
            "src": "contracts/LoserPredictionPool.sol:72"
          }
        ],
        "types": {
          "t_contract(IBEP20)8342": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)8587": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)7146": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)3490_storage)dyn_storage": {
            "label": "struct LoserPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)3490_storage": {
            "label": "struct LoserPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accBNBPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3479_storage))": {
            "label": "mapping(uint256 => mapping(address => struct LoserPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)3479_storage)": {
            "label": "mapping(address => struct LoserPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)3479_storage": {
            "label": "struct LoserPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "059d8d1f16edb50f401b354b62cb1f93aebd707cac868a79a2160ea7045b30f1": {
      "address": "0xF42648986DeF43a9d223Eb8EC8600376492877BF",
      "txHash": "0xd9041dc93a94c0a4de2b57292de8112d12cd0f31e90ce49a2ce717e018d9444a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)8342",
            "src": "contracts/WinnerPredictionPool.sol:50"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "prediction",
            "type": "t_contract(IPrediction)8587",
            "src": "contracts/WinnerPredictionPool.sol:52"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "predPerBlock",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:54"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:56"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)7146",
            "src": "contracts/WinnerPredictionPool.sol:58"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:59"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)7187_storage)dyn_storage",
            "src": "contracts/WinnerPredictionPool.sol:62"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)7176_storage))",
            "src": "contracts/WinnerPredictionPool.sol:64"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:66"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:68"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:70"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "operatorAddress",
            "type": "t_address",
            "src": "contracts/WinnerPredictionPool.sol:72"
          }
        ],
        "types": {
          "t_contract(IBEP20)8342": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)8587": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)7146": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)7187_storage)dyn_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)7187_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accPredPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)7176_storage))": {
            "label": "mapping(uint256 => mapping(address => struct WinnerPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)7176_storage)": {
            "label": "mapping(address => struct WinnerPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)7176_storage": {
            "label": "struct WinnerPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5c7c1b8f839f5b75af348c1c83700c1e772557bca26b97ad90ef9094a4d792a1": {
      "address": "0xd0df1810930c2Bb87939BAbB0a2c59Dc67C54E57",
      "txHash": "0xe48453c6bcdad6076d6ef833a864a47b101dfeb0c9b0e8c955b0f227d764e850",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)9468",
            "src": "contracts/WinnerPredictionPool.sol:50"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "prediction",
            "type": "t_contract(IPrediction)9713",
            "src": "contracts/WinnerPredictionPool.sol:52"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "predPerBlock",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:54"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:56"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)8278",
            "src": "contracts/WinnerPredictionPool.sol:58"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:59"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)8319_storage)dyn_storage",
            "src": "contracts/WinnerPredictionPool.sol:62"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)8308_storage))",
            "src": "contracts/WinnerPredictionPool.sol:64"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:66"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:68"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:70"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "operatorAddress",
            "type": "t_address",
            "src": "contracts/WinnerPredictionPool.sol:72"
          }
        ],
        "types": {
          "t_contract(IBEP20)9468": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)9713": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)8278": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)8319_storage)dyn_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)8319_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accPredPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)8308_storage))": {
            "label": "mapping(uint256 => mapping(address => struct WinnerPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)8308_storage)": {
            "label": "mapping(address => struct WinnerPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)8308_storage": {
            "label": "struct WinnerPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ca22f7abc8335d81de4cf9d627960d36b7db7f27bdc8b6312e7f6a49ba1a3711": {
      "address": "0xb82e47d41cc58bF21d386Bd73B192402c2110455",
      "txHash": "0x1d7da61d10d6e18b162f75fa9ea26238692db2449d65f944a38eca8da364aa6d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "LoserPredictionPool_Old",
            "label": "pred",
            "type": "t_contract(IBEP20)9434",
            "src": "contracts/LoserPredictionPool_Old.sol:50"
          },
          {
            "contract": "LoserPredictionPool_Old",
            "label": "prediction",
            "type": "t_contract(IPrediction)9679",
            "src": "contracts/LoserPredictionPool_Old.sol:52"
          },
          {
            "contract": "LoserPredictionPool_Old",
            "label": "bnbPerBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool_Old.sol:54"
          },
          {
            "contract": "LoserPredictionPool_Old",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool_Old.sol:56"
          },
          {
            "contract": "LoserPredictionPool_Old",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)8260",
            "src": "contracts/LoserPredictionPool_Old.sol:58"
          },
          {
            "contract": "LoserPredictionPool_Old",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool_Old.sol:59"
          },
          {
            "contract": "LoserPredictionPool_Old",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)4603_storage)dyn_storage",
            "src": "contracts/LoserPredictionPool_Old.sol:62"
          },
          {
            "contract": "LoserPredictionPool_Old",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)4592_storage))",
            "src": "contracts/LoserPredictionPool_Old.sol:64"
          },
          {
            "contract": "LoserPredictionPool_Old",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool_Old.sol:66"
          },
          {
            "contract": "LoserPredictionPool_Old",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool_Old.sol:68"
          },
          {
            "contract": "LoserPredictionPool_Old",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool_Old.sol:70"
          },
          {
            "contract": "LoserPredictionPool_Old",
            "label": "operatorAddress",
            "type": "t_address",
            "src": "contracts/LoserPredictionPool_Old.sol:72"
          }
        ],
        "types": {
          "t_contract(IBEP20)9434": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)9679": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)8260": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)4603_storage)dyn_storage": {
            "label": "struct LoserPredictionPool_Old.PoolInfo[]"
          },
          "t_struct(PoolInfo)4603_storage": {
            "label": "struct LoserPredictionPool_Old.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accBNBPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)4592_storage))": {
            "label": "mapping(uint256 => mapping(address => struct LoserPredictionPool_Old.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)4592_storage)": {
            "label": "mapping(address => struct LoserPredictionPool_Old.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)4592_storage": {
            "label": "struct LoserPredictionPool_Old.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6ece2225cf1657602a7120999440d8e87123131e9cecaf0248ae783e4ac5db68": {
      "address": "0xb60fb415Df7Ebb5022895EB5FEBe3E82f93E8cdB",
      "txHash": "0x7996588dc0390ab2ea1493dbb291d93a6e3c694458a4679462bc2f5879ec2806",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)9434",
            "src": "contracts/WinnerPredictionPool.sol:50"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "prediction",
            "type": "t_contract(IPrediction)9679",
            "src": "contracts/WinnerPredictionPool.sol:52"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "predPerBlock",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:54"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:56"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)8260",
            "src": "contracts/WinnerPredictionPool.sol:58"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:59"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)8301_storage)dyn_storage",
            "src": "contracts/WinnerPredictionPool.sol:62"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)8290_storage))",
            "src": "contracts/WinnerPredictionPool.sol:64"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:66"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:68"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:70"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "operatorAddress",
            "type": "t_address",
            "src": "contracts/WinnerPredictionPool.sol:72"
          }
        ],
        "types": {
          "t_contract(IBEP20)9434": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)9679": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)8260": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)8301_storage)dyn_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)8301_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accPredPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)8290_storage))": {
            "label": "mapping(uint256 => mapping(address => struct WinnerPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)8290_storage)": {
            "label": "mapping(address => struct WinnerPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)8290_storage": {
            "label": "struct WinnerPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "156f798313ca800efd2dc84a61e1f44488a3dc7952fb36f91f37f2d4fcc51c0d": {
      "address": "0x7Ac636e90959BD6bBEF3f5B4ecF4F6f5272620C9",
      "txHash": "0x2bca9d8ae0e71298e8d1a305107e26b6f103357b7b695407a2c32a9918c9405e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)9434",
            "src": "contracts/LoserPredictionPool.sol:50"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "BID",
            "type": "t_contract(IBEP20)9434",
            "src": "contracts/LoserPredictionPool.sol:52"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "prediction",
            "type": "t_contract(IPrediction)9679",
            "src": "contracts/LoserPredictionPool.sol:54"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "bidPerBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:56"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:58"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)8260",
            "src": "contracts/LoserPredictionPool.sol:60"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:61"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)3490_storage)dyn_storage",
            "src": "contracts/LoserPredictionPool.sol:64"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3479_storage))",
            "src": "contracts/LoserPredictionPool.sol:66"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:68"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:70"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:72"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "operatorAddress",
            "type": "t_address",
            "src": "contracts/LoserPredictionPool.sol:74"
          }
        ],
        "types": {
          "t_contract(IBEP20)9434": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)9679": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)8260": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)3490_storage)dyn_storage": {
            "label": "struct LoserPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)3490_storage": {
            "label": "struct LoserPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accBIDPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3479_storage))": {
            "label": "mapping(uint256 => mapping(address => struct LoserPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)3479_storage)": {
            "label": "mapping(address => struct LoserPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)3479_storage": {
            "label": "struct LoserPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
