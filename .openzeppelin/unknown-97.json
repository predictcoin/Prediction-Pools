{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x7702a30899dF38d6dD35d1F05d7c0df39d0FDd04",
      "txHash": "0xc56a74e2b2565c95a893619ae05657032f17c56d03c3fe08a16316b8404d50c4",
      "kind": "uups"
    },
    {
      "address": "0xfDc5ec4CE134220b60caE4b8f28575F2949ff8fe",
      "txHash": "0xbcfd214b46611c6d8682b5274bbb414a4a6524d51c7f3824421404e227de7376",
      "kind": "uups"
    },
    {
      "address": "0x8F8F943429D724Aa5C4ee77D880A364CfeC9557A",
      "txHash": "0x7dd217cb90da91181a2795d8840088bc74279b58e2b5c5c1c0a313449f42a80d",
      "kind": "uups"
    },
    {
      "address": "0x740dF4B42c06ca47974DB14803544327aeC17AAc",
      "txHash": "0xd1376e3eba4a55db04cb8425d7de6fb361a6883468418e1fc2a2c493b6cc91a0",
      "kind": "uups"
    },
    {
      "address": "0x4cEc24DD384753AAc586B99F6e23BdB8aFCCEC21",
      "txHash": "0xa4bae2bd6691e1364e95400106f4cdcde7c8947e60b39dcc80d4420f54c0fb07",
      "kind": "uups"
    },
    {
      "address": "0x63e90A645bbEbfF0E87F6aC5bF98AA03B7A6c239",
      "txHash": "0x60bc27e714d2119db0917b50b60b6cbe53cc60e2f4d950e56e79549c3a0bfe7c",
      "kind": "uups"
    },
    {
      "address": "0x6496e37706C78C324Bc0EDBF2255C06d03896eb5",
      "txHash": "0xfd8c764d7bc6a8bd598a29a7c446627c3f3980202c1af51a753ebc7080cd2040",
      "kind": "uups"
    },
    {
      "address": "0x16E1A10476F35877d01376C473F8C029e217CA80",
      "txHash": "0x1d80962ecc4a741bc49d8120ba65b16f23c5e5cb211cc2b1d8de3db7edf0f897",
      "kind": "uups"
    },
    {
      "address": "0xd4c4098306F98A54B7FC3586B263d6Ae1C49a844",
      "txHash": "0x89bfa7c33e8403dbafdf8a993a18023f9d46e0485eddbaf04111e18952b4f2d5",
      "kind": "uups"
    },
    {
      "address": "0xe7543ec3F8341E3Becb5E3711B2a633AB072E1B8",
      "txHash": "0xa12aefdcd5c4c43a00b9c803148c8a92ddf7d74ead3a82c049aa8bde65f19c04",
      "kind": "uups"
    },
    {
      "address": "0x93100d527082aFA47079544d9c9595d36aE2763E",
      "txHash": "0xc84df85add6b03fd95c9bd33049d6fac7f45df4ec6457834579c85cef239726d",
      "kind": "uups"
    },
    {
      "address": "0x312301a963102a41E6f4b753E5834996bB4e7740",
      "txHash": "0x184fb343e37e9907397b829e0a6ed4ef0bd2083f5ce82b3a754f286b7c054b7d",
      "kind": "uups"
    },
    {
      "address": "0xc31E9334171602bD2CE7025C58283d3d1aEF361b",
      "txHash": "0x0c75ade341696168ecd44d895492c618db8e299ac73d4620ce87e6a0ccd6b374",
      "kind": "uups"
    },
    {
      "address": "0xde3AF0416690dBDa4545415CC473AA8243E276aD",
      "txHash": "0x66b350d953fb039c8708d1fa43e86055d712e4ae7c193f6d58c8752f4f0028da",
      "kind": "uups"
    },
    {
      "address": "0x73f89E16195B1FF73385D11346C8BBB9666dDbc0",
      "txHash": "0xc4749b009df46686a6f44dfd24e2ba3b556f423a2918475453d6e76d52c47073",
      "kind": "uups"
    },
    {
      "address": "0x916CCE7b3b6F06868f200D6fa137Fa827640234B",
      "txHash": "0x85457ef2d07c57a1247e83915421bee6b86cfd6035a2eb6c3eb8418a4d10cd4f",
      "kind": "uups"
    },
    {
      "address": "0x85A71c3F2cF2Cc89a46C28f4b33feB2EBaed86bf",
      "txHash": "0x8a79f0481922cfff953e37a55163b33fa38d1392cedc74b0f6cec6ef9a26ed61",
      "kind": "uups"
    },
    {
      "address": "0xa807A09Fb029916B0434FCCdc7C4f3dfbE9AC7c2",
      "txHash": "0xb1edc5209bb40c751677ad47b19f9f3a0e5b6986f1895282a66bb4bf5cb36208",
      "kind": "uups"
    },
    {
      "address": "0x249F9Ec444310ca2DfE42c38ed1b9135C9c80d59",
      "txHash": "0xd2692238a77ad8500eb4e66425bce9ce512d7907bf0313f94e1cc329144ec563",
      "kind": "uups"
    }
  ],
  "impls": {
    "cf4e5e97b245c21a0806847138d60c223591c565c308ebe9d75285880fb8dd14": {
      "address": "0x1df1e2314503Ae25D2fE84143f89c5509E4cf1bA",
      "txHash": "0x1694984cba9a3e69e43d2bf07bc85e7ccb23ed8cf035c86e264155988fcbe53d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:233"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "MasterPred",
            "label": "pred",
            "type": "t_contract(IBEP20)3094",
            "src": "contracts\\Farm.sol:66"
          },
          {
            "contract": "MasterPred",
            "label": "predPerBlock",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:68"
          },
          {
            "contract": "MasterPred",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:70"
          },
          {
            "contract": "MasterPred",
            "label": "migrator",
            "type": "t_contract(IMigratorChef)1896",
            "src": "contracts\\Farm.sol:72"
          },
          {
            "contract": "MasterPred",
            "label": "wallet",
            "type": "t_contract(MasterPredWallet)3016",
            "src": "contracts\\Farm.sol:74"
          },
          {
            "contract": "MasterPred",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)1926_storage)dyn_storage",
            "src": "contracts\\Farm.sol:77"
          },
          {
            "contract": "MasterPred",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1916_storage))",
            "src": "contracts\\Farm.sol:79"
          },
          {
            "contract": "MasterPred",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:81"
          },
          {
            "contract": "MasterPred",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:83"
          },
          {
            "contract": "MasterPred",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:85"
          }
        ],
        "types": {
          "t_contract(IBEP20)3094": {
            "label": "contract IBEP20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IMigratorChef)1896": {
            "label": "contract IMigratorChef"
          },
          "t_contract(MasterPredWallet)3016": {
            "label": "contract MasterPredWallet"
          },
          "t_array(t_struct(PoolInfo)1926_storage)dyn_storage": {
            "label": "struct MasterPred.PoolInfo[]"
          },
          "t_struct(PoolInfo)1926_storage": {
            "label": "struct MasterPred.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)3094"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accPredPerShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1916_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MasterPred.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)1916_storage)": {
            "label": "mapping(address => struct MasterPred.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)1916_storage": {
            "label": "struct MasterPred.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "223517d5b80dce1c27c92ae7012e47f1a9a17eb4a74e5918922f3c8121062ea1": {
      "address": "0xC509C61448999064E2E40128eBc238cE70639f50",
      "txHash": "0x7ac628eb8553283d3e13c20db9213a4f73144bfc1bb28866474d2e5625d23c4d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:233"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "MasterPred",
            "label": "pred",
            "type": "t_contract(IBEP20)3094",
            "src": "contracts\\Farm.sol:66"
          },
          {
            "contract": "MasterPred",
            "label": "predPerBlock",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:68"
          },
          {
            "contract": "MasterPred",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:70"
          },
          {
            "contract": "MasterPred",
            "label": "migrator",
            "type": "t_contract(IMigratorChef)1896",
            "src": "contracts\\Farm.sol:72"
          },
          {
            "contract": "MasterPred",
            "label": "wallet",
            "type": "t_contract(MasterPredWallet)3016",
            "src": "contracts\\Farm.sol:74"
          },
          {
            "contract": "MasterPred",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)1926_storage)dyn_storage",
            "src": "contracts\\Farm.sol:77"
          },
          {
            "contract": "MasterPred",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1916_storage))",
            "src": "contracts\\Farm.sol:79"
          },
          {
            "contract": "MasterPred",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:81"
          },
          {
            "contract": "MasterPred",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:83"
          },
          {
            "contract": "MasterPred",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:85"
          }
        ],
        "types": {
          "t_contract(IBEP20)3094": {
            "label": "contract IBEP20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IMigratorChef)1896": {
            "label": "contract IMigratorChef"
          },
          "t_contract(MasterPredWallet)3016": {
            "label": "contract MasterPredWallet"
          },
          "t_array(t_struct(PoolInfo)1926_storage)dyn_storage": {
            "label": "struct MasterPred.PoolInfo[]"
          },
          "t_struct(PoolInfo)1926_storage": {
            "label": "struct MasterPred.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)3094"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accPredPerShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1916_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MasterPred.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)1916_storage)": {
            "label": "mapping(address => struct MasterPred.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)1916_storage": {
            "label": "struct MasterPred.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "07fe0e09d53f0234005f481e5fbd0add5489fbe51e7fed194321b90a99036747": {
      "address": "0xE77a1B16F91dfc0d0737B6768F6096e663b793eC",
      "txHash": "0xbede6beaac6dee5bfba77492792a44a7bbe350779750686acbf0b1471543c391",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:233"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "MasterPred",
            "label": "pred",
            "type": "t_contract(IBEP20)3215",
            "src": "contracts\\Farm.sol:66"
          },
          {
            "contract": "MasterPred",
            "label": "predPerBlock",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:68"
          },
          {
            "contract": "MasterPred",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:70"
          },
          {
            "contract": "MasterPred",
            "label": "migrator",
            "type": "t_contract(IMigratorChef)1896",
            "src": "contracts\\Farm.sol:72"
          },
          {
            "contract": "MasterPred",
            "label": "wallet",
            "type": "t_contract(MasterPredWallet)3137",
            "src": "contracts\\Farm.sol:74"
          },
          {
            "contract": "MasterPred",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)1926_storage)dyn_storage",
            "src": "contracts\\Farm.sol:77"
          },
          {
            "contract": "MasterPred",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1916_storage))",
            "src": "contracts\\Farm.sol:79"
          },
          {
            "contract": "MasterPred",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:81"
          },
          {
            "contract": "MasterPred",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:83"
          },
          {
            "contract": "MasterPred",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts\\Farm.sol:85"
          }
        ],
        "types": {
          "t_contract(IBEP20)3215": {
            "label": "contract IBEP20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IMigratorChef)1896": {
            "label": "contract IMigratorChef"
          },
          "t_contract(MasterPredWallet)3137": {
            "label": "contract MasterPredWallet"
          },
          "t_array(t_struct(PoolInfo)1926_storage)dyn_storage": {
            "label": "struct MasterPred.PoolInfo[]"
          },
          "t_struct(PoolInfo)1926_storage": {
            "label": "struct MasterPred.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)3215"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accPredPerShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1916_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MasterPred.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)1916_storage)": {
            "label": "mapping(address => struct MasterPred.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)1916_storage": {
            "label": "struct MasterPred.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "04873d97c47af44d092d9af952fb499075b312767fec9812da69f2a50200b800": {
      "address": "0xD314D1d45ce4448752AFeD8ac9cB990615a7bbf8",
      "txHash": "0x8f5b6d3588832bee0c1a2a2c6dbb98819ec508b169b340800deb82cac01e3539",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)4651",
            "src": "contracts/PredictionPool.sol:49"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "prediction",
            "type": "t_contract(Prediction)4882",
            "src": "contracts/PredictionPool.sol:51"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "predPerBlock",
            "type": "t_uint256",
            "src": "contracts/PredictionPool.sol:53"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/PredictionPool.sol:55"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)4573",
            "src": "contracts/PredictionPool.sol:57"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/PredictionPool.sol:58"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)3430_storage)dyn_storage",
            "src": "contracts/PredictionPool.sol:61"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3421_storage))",
            "src": "contracts/PredictionPool.sol:63"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/PredictionPool.sol:65"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/PredictionPool.sol:67"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/PredictionPool.sol:69"
          }
        ],
        "types": {
          "t_contract(IBEP20)4651": {
            "label": "contract IBEP20"
          },
          "t_contract(Prediction)4882": {
            "label": "contract Prediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)4573": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)3430_storage)dyn_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)3430_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accPredPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3421_storage))": {
            "label": "mapping(uint256 => mapping(address => struct WinnerPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)3421_storage)": {
            "label": "mapping(address => struct WinnerPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)3421_storage": {
            "label": "struct WinnerPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "db26d95df15bbe3c71dff424f1ec6632c8bb928692c00366bc83b64589098ff0": {
      "address": "0x41471f44Fa64206F133E8B3b0E9471174aE71A16",
      "txHash": "0x4b6c69012c34c30c1062fcf37a175229f20e6a9bc854b8378962015bc32997f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)8104",
            "src": "contracts/LoserPredictionPool.sol:49"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "prediction",
            "type": "t_contract(IPrediction)8349",
            "src": "contracts/LoserPredictionPool.sol:51"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "bnbPerBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:53"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:55"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)7027",
            "src": "contracts/LoserPredictionPool.sol:57"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:58"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)3488_storage)dyn_storage",
            "src": "contracts/LoserPredictionPool.sol:61"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3479_storage))",
            "src": "contracts/LoserPredictionPool.sol:63"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:65"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:67"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:69"
          }
        ],
        "types": {
          "t_contract(IBEP20)8104": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)8349": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)7027": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)3488_storage)dyn_storage": {
            "label": "struct LoserPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)3488_storage": {
            "label": "struct LoserPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accBNBPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3479_storage))": {
            "label": "mapping(uint256 => mapping(address => struct LoserPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)3479_storage)": {
            "label": "mapping(address => struct LoserPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)3479_storage": {
            "label": "struct LoserPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3e0edf9dc751699014d43b2d2aa15543557aa72defa93bcba22cf0b147357845": {
      "address": "0x5130D42D882348a8aBEeD2F8572F395210420193",
      "txHash": "0x8030532574f8dac94faaf92a809cba41c905f19e09c22074d7ce614929b22096",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)8104",
            "src": "contracts/WinnerPredictionPool.sol:49"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "prediction",
            "type": "t_contract(IPrediction)8349",
            "src": "contracts/WinnerPredictionPool.sol:51"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "predPerBlock",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:53"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:55"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)7027",
            "src": "contracts/WinnerPredictionPool.sol:57"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:58"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)7066_storage)dyn_storage",
            "src": "contracts/WinnerPredictionPool.sol:61"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)7057_storage))",
            "src": "contracts/WinnerPredictionPool.sol:63"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:65"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:67"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:69"
          }
        ],
        "types": {
          "t_contract(IBEP20)8104": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)8349": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)7027": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)7066_storage)dyn_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)7066_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accPredPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)7057_storage))": {
            "label": "mapping(uint256 => mapping(address => struct WinnerPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)7057_storage)": {
            "label": "mapping(address => struct WinnerPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)7057_storage": {
            "label": "struct WinnerPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "640b530f731b91ed1f1dc571596fd8fc5d6258bca96e95dc81c74c7afb98407d": {
      "address": "0xaAe56C31d55D1C0e2eBD0D1b2723CFb87Eda40Af",
      "txHash": "0x24d894334632738b87b716c7b910fb70381a6435811366ea488a0a6dd2803409",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)8104",
            "src": "contracts/LoserPredictionPool.sol:49"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "prediction",
            "type": "t_contract(IPrediction)8349",
            "src": "contracts/LoserPredictionPool.sol:51"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "bnbPerBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:53"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:55"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)7027",
            "src": "contracts/LoserPredictionPool.sol:57"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:58"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)3488_storage)dyn_storage",
            "src": "contracts/LoserPredictionPool.sol:61"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3479_storage))",
            "src": "contracts/LoserPredictionPool.sol:63"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:65"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:67"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:69"
          }
        ],
        "types": {
          "t_contract(IBEP20)8104": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)8349": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)7027": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)3488_storage)dyn_storage": {
            "label": "struct LoserPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)3488_storage": {
            "label": "struct LoserPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accBNBPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3479_storage))": {
            "label": "mapping(uint256 => mapping(address => struct LoserPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)3479_storage)": {
            "label": "mapping(address => struct LoserPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)3479_storage": {
            "label": "struct LoserPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "705cdb91be2e67124f23cc51d799f069fca0f36720d7019446b89aa5929ab1b6": {
      "address": "0x8f6053CC0E28eD9D9a0fEB6EC63Ae1c45902b19A",
      "txHash": "0xc6b2e3eea236da602b3a94d4eb9644504c5387aeb72416e4f8e7d744c0084d26",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)8192",
            "src": "contracts/LoserPredictionPool.sol:50"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "prediction",
            "type": "t_contract(IPrediction)8437",
            "src": "contracts/LoserPredictionPool.sol:52"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "bnbPerBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:54"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:56"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)7071",
            "src": "contracts/LoserPredictionPool.sol:58"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:59"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)3490_storage)dyn_storage",
            "src": "contracts/LoserPredictionPool.sol:62"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3479_storage))",
            "src": "contracts/LoserPredictionPool.sol:64"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:66"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:68"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:70"
          }
        ],
        "types": {
          "t_contract(IBEP20)8192": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)8437": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)7071": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)3490_storage)dyn_storage": {
            "label": "struct LoserPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)3490_storage": {
            "label": "struct LoserPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accBNBPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3479_storage))": {
            "label": "mapping(uint256 => mapping(address => struct LoserPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)3479_storage)": {
            "label": "mapping(address => struct LoserPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)3479_storage": {
            "label": "struct LoserPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "dba2bf51b464dbdfcf5a6f3fb7348369afee6cbaa5da8b4e44cadb328a809b0c": {
      "address": "0xa4317c8b1d4097c31CBA645dF85a5B4AeDe35632",
      "txHash": "0x04b030a85a4f3481f79c3492f50cab25f89a47d3aa38740b61fefe8faebc87bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)8192",
            "src": "contracts/WinnerPredictionPool.sol:50"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "prediction",
            "type": "t_contract(IPrediction)8437",
            "src": "contracts/WinnerPredictionPool.sol:52"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "predPerBlock",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:54"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:56"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)7071",
            "src": "contracts/WinnerPredictionPool.sol:58"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:59"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)7112_storage)dyn_storage",
            "src": "contracts/WinnerPredictionPool.sol:62"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)7101_storage))",
            "src": "contracts/WinnerPredictionPool.sol:64"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:66"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:68"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:70"
          }
        ],
        "types": {
          "t_contract(IBEP20)8192": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)8437": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)7071": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)7112_storage)dyn_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)7112_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accPredPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)7101_storage))": {
            "label": "mapping(uint256 => mapping(address => struct WinnerPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)7101_storage)": {
            "label": "mapping(address => struct WinnerPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)7101_storage": {
            "label": "struct WinnerPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b41e91b87ac2cacc88b88921917d468a0859351993c30857005d8e2ba7d732af": {
      "address": "0x8f4717724B2e3F093F86AaF9ac8Ef420Ed28C625",
      "txHash": "0x2624e20169dead5fb112a793a508c44628282b364a0bf18fb8322f9bdfb85d40",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)8256",
            "src": "contracts/WinnerPredictionPool.sol:50"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "prediction",
            "type": "t_contract(IPrediction)8501",
            "src": "contracts/WinnerPredictionPool.sol:52"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "predPerBlock",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:54"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:56"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)7103",
            "src": "contracts/WinnerPredictionPool.sol:58"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:59"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)7144_storage)dyn_storage",
            "src": "contracts/WinnerPredictionPool.sol:62"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)7133_storage))",
            "src": "contracts/WinnerPredictionPool.sol:64"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:66"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:68"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:70"
          }
        ],
        "types": {
          "t_contract(IBEP20)8256": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)8501": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)7103": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)7144_storage)dyn_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)7144_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accPredPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)7133_storage))": {
            "label": "mapping(uint256 => mapping(address => struct WinnerPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)7133_storage)": {
            "label": "mapping(address => struct WinnerPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)7133_storage": {
            "label": "struct WinnerPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e710f9bf362972275afb638f1350c9d43ee71bc01cecbec554b4099f52883a23": {
      "address": "0x7dAB558E2A15c1f5DCbcC916AB12115c4d1c89E4",
      "txHash": "0xa29aeba565590135dea2c9a3f855ac5a9583715547fa39f58099854ba16c8e6d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)8256",
            "src": "contracts/LoserPredictionPool.sol:50"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "prediction",
            "type": "t_contract(IPrediction)8501",
            "src": "contracts/LoserPredictionPool.sol:52"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "bnbPerBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:54"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:56"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)7103",
            "src": "contracts/LoserPredictionPool.sol:58"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:59"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)3490_storage)dyn_storage",
            "src": "contracts/LoserPredictionPool.sol:62"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3479_storage))",
            "src": "contracts/LoserPredictionPool.sol:64"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:66"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:68"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:70"
          }
        ],
        "types": {
          "t_contract(IBEP20)8256": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)8501": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)7103": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)3490_storage)dyn_storage": {
            "label": "struct LoserPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)3490_storage": {
            "label": "struct LoserPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accBNBPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3479_storage))": {
            "label": "mapping(uint256 => mapping(address => struct LoserPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)3479_storage)": {
            "label": "mapping(address => struct LoserPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)3479_storage": {
            "label": "struct LoserPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f9e1507ffbe2773940ed1927e61c7c9a203c42452dcc835047012e670d5b98c5": {
      "address": "0x41170f49512F143d1815961B8f76F1B416F19bcc",
      "txHash": "0xe23e2d59e5d78d45b5ffe9a8c22b30aaed8678fcb3527b01a145e0abdb5458cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)8358",
            "src": "contracts/LoserPredictionPool.sol:50"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "prediction",
            "type": "t_contract(IPrediction)8603",
            "src": "contracts/LoserPredictionPool.sol:52"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "bnbPerBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:54"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:56"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)7154",
            "src": "contracts/LoserPredictionPool.sol:58"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:59"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)3490_storage)dyn_storage",
            "src": "contracts/LoserPredictionPool.sol:62"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3479_storage))",
            "src": "contracts/LoserPredictionPool.sol:64"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:66"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:68"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/LoserPredictionPool.sol:70"
          },
          {
            "contract": "LoserPredictionPool",
            "label": "operatorAddress",
            "type": "t_address",
            "src": "contracts/LoserPredictionPool.sol:72"
          }
        ],
        "types": {
          "t_contract(IBEP20)8358": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)8603": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)7154": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)3490_storage)dyn_storage": {
            "label": "struct LoserPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)3490_storage": {
            "label": "struct LoserPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accBNBPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3479_storage))": {
            "label": "mapping(uint256 => mapping(address => struct LoserPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)3479_storage)": {
            "label": "mapping(address => struct LoserPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)3479_storage": {
            "label": "struct LoserPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2ff73cd0604b37efc8073b0f3b5c3a427375ec887438f9a8f9ed52bce986b20c": {
      "address": "0x9c521B6ac9E3e5eAeFe0E5E37f5CC1C901E8CA0E",
      "txHash": "0x9c1f4a8575f736285be4994983fcd7512923d2adc99cfe180a15a7cf6e01e475",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "pred",
            "type": "t_contract(IBEP20)8358",
            "src": "contracts/WinnerPredictionPool.sol:50"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "prediction",
            "type": "t_contract(IPrediction)8603",
            "src": "contracts/WinnerPredictionPool.sol:52"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "predPerBlock",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:54"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "BONUS_MULTIPLIER",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:56"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "wallet",
            "type": "t_contract(PredictionWallet)7154",
            "src": "contracts/WinnerPredictionPool.sol:58"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "maxPredDeposit",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:59"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)7195_storage)dyn_storage",
            "src": "contracts/WinnerPredictionPool.sol:62"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)7184_storage))",
            "src": "contracts/WinnerPredictionPool.sol:64"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "allocPoint",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:66"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:68"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "totalRewardDebt",
            "type": "t_uint256",
            "src": "contracts/WinnerPredictionPool.sol:70"
          },
          {
            "contract": "WinnerPredictionPool",
            "label": "operatorAddress",
            "type": "t_address",
            "src": "contracts/WinnerPredictionPool.sol:72"
          }
        ],
        "types": {
          "t_contract(IBEP20)8358": {
            "label": "contract IBEP20"
          },
          "t_contract(IPrediction)8603": {
            "label": "contract IPrediction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(PredictionWallet)7154": {
            "label": "contract PredictionWallet"
          },
          "t_array(t_struct(PoolInfo)7195_storage)dyn_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo[]"
          },
          "t_struct(PoolInfo)7195_storage": {
            "label": "struct WinnerPredictionPool.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accPredPerShare",
                "type": "t_uint256"
              },
              {
                "label": "epoch",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)7184_storage))": {
            "label": "mapping(uint256 => mapping(address => struct WinnerPredictionPool.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)7184_storage)": {
            "label": "mapping(address => struct WinnerPredictionPool.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)7184_storage": {
            "label": "struct WinnerPredictionPool.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
